------------------------------------------------------------
Lab3 feedback for Strizower, Elias B. (ebs021)
------------------------------------------------------------
prelab1: In your pre-lab.txt file jot down your observations regarding the following:

  1. Do the threads order of execution match the order in which they were created?
  2. Looking at the characters that a printed to the standard output, do the threads always follow the same order of execution? That is, we want to know whether if you always see thread 1, then thread 2, then thread 3, etc., repeating in a predictable order
	Score: 20 / 20
	Comment: Good

prelab2: Write a program called mytime.c, which calls gettimeofday(2), passes the
results to ctime(3), and then prints to the screen the resulting string.
Whether you have used these functions before or not, take the time to read
their man pages to understand what they do and how to use them.
	Score: 10 / 10
	Comment: Good

lab3 problem 1): Correct Makefile to build all three programs.
	Score: 7 / 10
	Comment: Need to include make commands for all summation files (sumation4.c and summation5.c)

lab3 problem 2): * [3 points] Problem 2.1 – In answers.txt: undefined symbols in summation.c
  * [4 points] Problem 2.2 - In answers.txt: linker flag to use the math library
  * [3 points] Problem 2.3 - In answers.txt: any remaining undefined symbols?
	Score: 8 / 10
	Comment: No answer about the original undefined references.

lab3 problem 3): * [3 points: Problem 3.1 - In answers.txt: passing arguments to threads
  * [3 points]: Problem 3.2 – In answers.txt: how calloc may be better than malloc
  * [2 points]: Problem 3.3 – In answers.txt: thread detached state
  * [3 points]: Problem 3.4 – In answers.txt: thread synchronization and returning results
  * [3 points]: Problem 3.5 – In answers.txt: what happens when one thread calls exit
  * [3 points]: Problem 3.6 – In answers.txt: what happens when one thread calls execl
	Score: 20 / 20
	Comment: Good

lab3 problem 4): * [10 points]: Problem 4.1 – Returns time for execution of summation (gettimeofday)
  * [5 points]: Problem 4.2 – Correct subtraction of time values
	Score: 15 / 15
	Comment: Looks good

lab3 problem 5): * [8 points]: Problem 5.1 – Each thread computes it run time and prints end time with ctime
  * [4 points]: Problem 5.2 – In answers.txt: is the end time printed reliable?
  * [3 points]: Problem 5.3 – In answers.txt: what causes problems with ctime and how to avoid it
	Score: 13 / 15
	Comment: Good answer, but it is actually not guaranteed because the buffer used internally for ctime is global and therefore shared by all the threads. This is referred to as not being thread safe.

------------------------------------------------------------
TOTAL 93.0 / 100
------------------------------------------------------------

